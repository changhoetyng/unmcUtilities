// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Home Snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#DEE4E8",
      "flex": 1,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "zIndex": 1100,
      }
    }
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "space-around",
          "zIndex": 1000,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 10,
            "display": "flex",
            "height": 150,
            "justifyContent": "space-around",
            "width": 150,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/loading.gif",
            }
          }
          style={
            Object {
              "height": "70%",
              "width": "70%",
            }
          }
        />
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Loading
        </Text>
      </View>
    </View>
  </Modal>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#70A9FF",
        "height": "22%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "marginTop": 37.352000000000004,
          },
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "90%",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 53.36,
            },
            Object {
              "color": "white",
              "fontWeight": "bold",
            },
          ]
        }
      >
        Home
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="setting"
      >
        <Image
          source={
            Object {
              "uri": "https://cdn1.vectorstock.com/i/thumb-large/77/30/default-avatar-profile-icon-grey-photo-placeholder-vector-17317730.jpg",
            }
          }
          style={
            Object {
              "borderRadius": 46.690000000000005,
              "height": 93.38000000000001,
              "width": 93.38000000000001,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "height": 200.1,
            "marginTop": 40.019999999999996,
          },
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 10,
            "justifyContent": "center",
            "width": "90%",
          },
        ]
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-around",
            "width": "100%",
          }
        }
      >
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "opacity": 1,
              }
            }
            testID="sportComplex"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 75,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Object {
                  "fontSize": 26.250000000000004,
                }
              }
            >
              Sport Complex
            </Text>
          </View>
        </View>
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "opacity": 1,
              }
            }
            testID="roomBooking"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 75,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Object {
                  "fontSize": 26.250000000000004,
                }
              }
            >
              Room Booking
            </Text>
          </View>
        </View>
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "opacity": 1,
              }
            }
            testID="myBooking"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 75,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Object {
                  "fontSize": 26.250000000000004,
                }
              }
            >
              My Booking
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "marginTop": 106.72,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 45.75,
            },
            Object {
              "color": "black",
              "fontWeight": "bold",
              "marginBottom": 3,
            },
          ]
        }
      >
        Announcement
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 25,
              },
              Object {
                "color": "#70A9FF",
              },
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "alignSelf": "center",
        "flex": 1,
        "width": "90%",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</RCTSafeAreaView>
`;
