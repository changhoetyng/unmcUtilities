// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Confirmation Screen Render Check In Page 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  style={
    Object {
      "zIndex": 1100,
    }
  }
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#rgba(0, 0, 0, 0.5)",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "space-around",
        "zIndex": 1000,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderRadius": 10,
          "display": "flex",
          "height": 150,
          "justifyContent": "space-around",
          "width": 150,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/assets/loading.gif",
          }
        }
        style={
          Object {
            "height": "70%",
            "width": "70%",
          }
        }
      />
      <Text
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        Loading
      </Text>
    </View>
  </View>
</Modal>
`;

exports[`TimeSelectionRoom Screen Render TimeSelectionRoom Page 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#DEE4E8",
      "flex": 1,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "zIndex": 1100,
      }
    }
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "space-around",
          "zIndex": 1000,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 10,
            "display": "flex",
            "height": 150,
            "justifyContent": "space-around",
            "width": 150,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/loading.gif",
            }
          }
          style={
            Object {
              "height": "70%",
              "width": "70%",
            }
          }
        />
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Loading
        </Text>
      </View>
    </View>
  </Modal>
  <View
    style={
      Object {
        "backgroundColor": "#DEE4E8",
        "padding": 10,
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 60,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "black",
            "fontWeight": "bold",
            "marginLeft": 8,
          },
          Object {
            "fontSize": 45,
          },
        ]
      }
    >
      Select a time
    </Text>
    <Text
      style={
        Object {
          "color": "#70A9FF",
          "fontSize": 26.250000000000004,
          "fontWeight": "bold",
          "marginLeft": 8,
          "width": "50%",
        }
      }
    >
      Pick a time and date that's available for the room.
    </Text>
  </View>
  <View
    style={
      Object {
        "padding": 15,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 41.25,
          "fontWeight": "bold",
          "marginBottom": 5,
        }
      }
    >
      Pick a Date:
    </Text>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
    >
      <View
        accessible={true}
        style={
          Object {
            "borderColor": "#757575",
            "borderWidth": 2.5,
            "marginBottom": 8,
            "opacity": 1,
            "padding": 5,
            "width": "40%",
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "fontSize": 33.75,
            }
          }
        >
          27/04/2021
        </Text>
      </View>
    </RNGestureHandlerButton>
    <Text
      style={
        Object {
          "fontSize": 41.25,
          "fontWeight": "bold",
          "marginBottom": 8,
        }
      }
    >
      Availability
    </Text>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Object {
            "alignContent": "center",
            "alignSelf": "center",
            "backgroundColor": "white",
            "flexWrap": "wrap",
            "height": 525,
            "padding": 10,
            "width": 525,
          }
        }
      >
        <View
          style={
            Object {
              "height": "100%",
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "alignSelf": "center",
                "fontSize": 37.5,
              }
            }
          >
            Select Duration
          </Text>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": true,
              }
            }
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#ededed",
                "borderRadius": 3,
                "borderWidth": 1,
                "margin": 5,
                "marginLeft": 10,
                "marginRight": 10,
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="checkbox"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#2089dc",
                      "fontSize": 24,
                    },
                    Object {
                      "minWidth": 24,
                    },
                    Object {
                      "fontFamily": "FontAwesome",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
              <Text
                style={
                  Object {
                    "color": "#43484d",
                    "fontWeight": "bold",
                    "marginLeft": 10,
                    "marginRight": 10,
                  }
                }
                testID="checkboxTitle"
              >
                1 Hours
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
              }
            }
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#ededed",
                "borderRadius": 3,
                "borderWidth": 1,
                "margin": 5,
                "marginLeft": 10,
                "marginRight": 10,
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="checkbox"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#bfbfbf",
                      "fontSize": 24,
                    },
                    Object {
                      "minWidth": 24,
                    },
                    Object {
                      "fontFamily": "FontAwesome",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
              <Text
                style={
                  Object {
                    "color": "#43484d",
                    "fontWeight": "bold",
                    "marginLeft": 10,
                    "marginRight": 10,
                  }
                }
                testID="checkboxTitle"
              >
                2 Hours
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "bottom": 0,
                "position": "absolute",
                "width": "100%",
              }
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={Object {}}
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "margin": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`TimeSelectionSportComplex Screen Render TimeSelectionSportComplex Page 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#DEE4E8",
      "flex": 1,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "zIndex": 1100,
      }
    }
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "space-around",
          "zIndex": 1000,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 10,
            "display": "flex",
            "height": 150,
            "justifyContent": "space-around",
            "width": 150,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/loading.gif",
            }
          }
          style={
            Object {
              "height": "70%",
              "width": "70%",
            }
          }
        />
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Loading
        </Text>
      </View>
    </View>
  </Modal>
  <View
    style={
      Object {
        "backgroundColor": "#DEE4E8",
        "padding": 10,
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 60,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "black",
            "fontWeight": "bold",
            "marginLeft": 8,
          },
          Object {
            "fontSize": 45,
          },
        ]
      }
    >
      Select a time
    </Text>
    <Text
      style={
        Object {
          "color": "#70A9FF",
          "fontSize": 26.250000000000004,
          "fontWeight": "bold",
          "marginLeft": 8,
          "width": "50%",
        }
      }
    >
      Pick a time and date that's available for the court.
    </Text>
  </View>
  <View
    style={
      Object {
        "padding": 15,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 41.25,
          "fontWeight": "bold",
          "marginBottom": 5,
        }
      }
    >
      Pick a Date:
    </Text>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
    >
      <View
        accessible={true}
        style={
          Object {
            "borderColor": "#757575",
            "borderWidth": 2.5,
            "marginBottom": 8,
            "opacity": 1,
            "padding": 5,
            "width": "40%",
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "fontSize": 33.75,
            }
          }
        >
          27/04/2021
        </Text>
      </View>
    </RNGestureHandlerButton>
    <Text
      style={
        Object {
          "fontSize": 41.25,
          "fontWeight": "bold",
          "marginBottom": 8,
        }
      }
    >
      Availability
    </Text>
  </View>
</View>
`;

exports[`TimeSelectionSportComplex Screen Render TimeSelectionSportComplex Page 2`] = `
<View
  style={
    Object {
      "backgroundColor": "#DEE4E8",
      "flex": 1,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "zIndex": 1100,
      }
    }
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "space-around",
          "zIndex": 1000,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 10,
            "display": "flex",
            "height": 150,
            "justifyContent": "space-around",
            "width": 150,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/loading.gif",
            }
          }
          style={
            Object {
              "height": "70%",
              "width": "70%",
            }
          }
        />
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Loading
        </Text>
      </View>
    </View>
  </Modal>
  <View
    style={
      Object {
        "backgroundColor": "#DEE4E8",
        "padding": 10,
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 60,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "black",
            "fontWeight": "bold",
            "marginLeft": 8,
          },
          Object {
            "fontSize": 45,
          },
        ]
      }
    >
      Select a time
    </Text>
    <Text
      style={
        Object {
          "color": "#70A9FF",
          "fontSize": 26.250000000000004,
          "fontWeight": "bold",
          "marginLeft": 8,
          "width": "50%",
        }
      }
    >
      Pick a time and date that's available for the court.
    </Text>
  </View>
  <View
    style={
      Object {
        "padding": 15,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 41.25,
          "fontWeight": "bold",
          "marginBottom": 5,
        }
      }
    >
      Pick a Date:
    </Text>
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
    >
      <View
        accessible={true}
        style={
          Object {
            "borderColor": "#757575",
            "borderWidth": 2.5,
            "marginBottom": 8,
            "opacity": 1,
            "padding": 5,
            "width": "40%",
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "fontSize": 33.75,
            }
          }
        >
          27/04/2021
        </Text>
      </View>
    </RNGestureHandlerButton>
    <Text
      style={
        Object {
          "fontSize": 41.25,
          "fontWeight": "bold",
          "marginBottom": 8,
        }
      }
    >
      Availability
    </Text>
  </View>
</View>
`;

exports[`VenueSelection Screen Render VenueSelection Page 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#DEE4E8",
      "flex": 1,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "zIndex": 1100,
      }
    }
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "space-around",
          "zIndex": 1000,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 10,
            "display": "flex",
            "height": 150,
            "justifyContent": "space-around",
            "width": 150,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/loading.gif",
            }
          }
          style={
            Object {
              "height": "70%",
              "width": "70%",
            }
          }
        />
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Loading
        </Text>
      </View>
    </View>
  </Modal>
  <View
    style={
      Object {
        "backgroundColor": "#DEE4E8",
        "padding": 10,
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 60,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "black",
            "fontWeight": "bold",
            "marginLeft": 8,
          },
          Object {
            "fontSize": 45,
          },
        ]
      }
    >
      Choose a Room
    </Text>
    <Text
      style={
        Object {
          "color": "#70A9FF",
          "fontSize": 26.250000000000004,
          "fontWeight": "bold",
          "marginLeft": 8,
          "width": "50%",
        }
      }
    >
      Pick a room and check for it's availability.
    </Text>
  </View>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "alignSelf": "center",
        "flex": 1,
        "width": "90%",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
